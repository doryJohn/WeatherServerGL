Login to AWS at:
https://us-west-2.console.aws.amazon.com/console/home?region=us-west-2#   used defalt credentials

goto Lambda
ran send_email:
It successfully sent test message to johnwilliamturley@yahoo.com

added JohnOnSiren@zoleo.com
hit "Deploy"  and then "Test"
message got to zoleo with the text in variable BODY_TEXT
Note that in yahoo the text displaded is that from the variable BODY_HTML



Forcasts of interest:
from canada Eastern Lake superior
https://weather.gc.ca/marine/forecast_e.html?mapID=09&siteID=08503

From NOAA
https://forecast.weather.gov/product.php?site=mqt&product=glf&issuedby=ls
FZUS63    Open lake forcast
LSZ266    Lake Superior East of a line from Manitou Island to Marquette MI
and West of a line from Grand Marais MI to the US/Canadian Borde
    https://tgftp.nws.noaa.gov/data/forecasts/marine/great_lakes/ls/lsz266.txt  (also has FZUS63 in it)
LSZ267    Lake Superior from Grand Marais MI to Whitefish Point MI 5NM off
shore to the US/Canadian border-
    https://tgftp.nws.noaa.gov/data/forecasts/marine/great_lakes/ls/lsz267.txt  (also has FZUS63 in it)


Useful link:
https://medium.com/@selhorma/the-complete-beginners-guide-to-creating-an-aws-lambda-function-from-scratch-d03e6fa7e2b2

https://w3lessons.info/send-email-attachment-python-aws-boto-ses
https://regex101.com/     https://regexr.com/


create weatherserverGL in lambda using python 3.9  it will have layers to do all the work.

in order to send emails need to add emailPolicy1 to the function weatherserverGL's role





Layers, followed instructions as from before:
â€œLayers:
https://docs.aws.amazon.com/lambda/latest/dg/python-package.html
https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html
https://medium.com/the-cloud-architect/getting-started-with-aws-lambda-layers-for-python-6e10b1f9a5d

so... to put functions in a layer
1.  It needs to all be packed into a zip file.
2.  The root of the zip file needs to have a directory called python
3.  All the functions are placed in the directory called python.
4.  No other special files are needed.
5.  In the lambda function place the statement: import filename as whatEver
6.  To call the function place the statement whatEver.functionName


All seems to be working

Create layer to read FTP and send email.



Periodic execution of lambda function:
https://www.kodyaz.com/aws/schedule-aws-lambda-function-for-periodic-execution.aspx

go to cloud watch   -> events
created a new real -> rule type schedule  send to eventBridge



Amazon SNS????

Amazon DynamoDB  Database, always free

Amazon SES, always free
https://anil.io/blog/aws/use-ses-lambda-mail-server-with-custom-domain-to-receive-emails/
https://aws.amazon.com/premiumsupport/knowledge-center/ses-receive-inbound-emails/


bought a domain from dreamhost: aksail.tech

created a domain identity on AWS:
https://docs.aws.amazon.com/ses/latest/dg/creating-identities.html#verify-domain-procedure

arn:aws:ses:us-west-2:857980383889:identity/aksail.tech

https://docs.aws.amazon.com/ses/latest/dg/creating-identities.html#verify-domain-procedure


create a custom mx record on dreamhost pointing to ses

create a ruleset to match all emails


permissions to S3 bucket
https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-bucket.html


https://docs.aws.amazon.com/ses/latest/dg/receiving-email-permissions.html#receiving-email-permissions-s3



https://aws.amazon.com/blogs/messaging-and-targeting/forward-incoming-email-to-an-external-destination/


https://aws.amazon.com/premiumsupport/knowledge-center/ses-receive-inbound-emails/

create bucket


change permissions

made SES ruleset active and I am now storing emails in S3 bucket!!!!! Yay!!!


Now need to send email info to Lambda
https://docs.aws.amazon.com/ses/latest/dg/receiving-email-action-lambda-event.html

https://www.workfall.com/learning/blog/send-s3-event-notification-email-using-lambda-and-ses/

created a lambda function that is triggered by a put in my s3 bucket

not sure if this is the way

created a SNS topic.  New emails triggers lamda function


New try following:
Forward Incoming Email to an External Destination | AWS Messaging & Targeting Blog (amazon.com)

About module  email
https://www.thepythoncode.com/article/reading-emails-in-python

I was able to modify this to read the body in my lambda function


VERY IMPORTANT HELP FOR TROUBLE SHOOTING!
When a lambda function is called it generates a log in CloudWatch.  I can see the output of all the print statements there


Now to work with DynamoDB to create a stack of jobs to do

https://www.dynamodbguide.com/


Use boto3 DynamoDB client

https://docs.aws.amazon.com/code-library/latest/ug/python_3_dynamodb_code_examples.html

https://dynobase.dev/dynamodb-python-with-boto3/
 

IAM policy, use: AmazonDynamoDBFullAccess



dateTime index converted to timestamp

A Unix timestamp is the number of seconds between a particular date and January 1, 1970 at UTC. 


https://boto3.amazonaws.com/v1/documentation/api/latest/guide/dynamodb.html#querying-and-scanning




SCRAPING DATA FROM A WEB PAGE
reference page https://github.com/aissa-laribi/bs4-in-lambda 
first install pipenv
reference page https://www.pythontutorial.net/python-basics/install-pipenv-windows/
"the only way to import the modules to Lambda is to bundle the lambda function alongside the modules in an isolated environment."
********use power shell to do the following*******
Install python on windows
install pip on windows
Install pipenv on Windows pip install pipenv
got this message "   WARNING: The script virtualenv.exe is installed in 
'C:\Users\johnw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\Scripts' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The scripts pipenv-resolver.exe and pipenv.exe are installed in 
  'C:\Users\johnw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\Scripts' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location."

echo $Env:PATH  or  $env:Path-split';'
need to add above path so:  (not this is only temporary so will have to redo it)
$env:PATH += ";C:\Users\johnw\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\Scripts"

Third, type the following command to check if the pipenv installed correctly:
pipenv -h

Creating a new project
First, create a new project folder e.g., crawler.

Second, navigate to the crawler folder and install the requests package using the pipenv command:
pipenv install requests
To find the location of the virtual environment, you use the following command:  pipenv --venv
Third, create a new file called app.py in the project folder and add the following code to the file:
import requests

response = requests.get('https://www.python.org/')
print(response.status_code)


use the following command to activate the new virtual environment: pipenv shell   
If you run the app.py now, it should work correctly:
python app.py
Code language: CSS (css)
Output:
200

 use the exit command to deactivate the virtual environment:  exit  (but not right now)

 Now to installing depencies:
 in powershell in base directory with virtual environment active:
 pip install bs4
watch the installation because aws lambda uses linux.  So installation must be done from universal wheels.
The names of wheels is of the form beautifulsoup4-4.12.3-py3-none-any.whl.metadata  The portion "-any" indicates that it is a universal wheels


create folder in project base directory called 'python'
copy the virtual enviornment over to the project base directory (ie from C:\Users\johnw\.virtualenvs\GetCandianWeather-O6JI1Buk\Lib to C:\MyFileSystem\ComputerProgramming\GetCandianWeather\python)   
*change the directory named 'Lib' to 'lib' 
*add a directory in 'lib' called 'python3.12'
*move 'sit-packages' into 'python 3.12'
zip up 'python'
upload python.zip to amazon layer
